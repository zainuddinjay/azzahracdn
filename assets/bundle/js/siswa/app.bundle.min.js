

var sekolah = "KISS MAN BARANTI";
var reloadServer = 300;
var reloadStatus = false;
var intervaltime = 60;
var id_kelas = 0;
var timeinterval;
//var myclientip = "";


/*Usage example*/
/*Usage example*/


var ppdbApp = angular.module('ppdbApp', [
	'ngCookies',
	'ngSanitize',
	"ui.router", 
	'ngAnimate',
	'ui.mask',
	'angular-loading-bar',
	'ui-notification']);




ppdbApp.filter('trusted', function($sce){
        return function(html){
            return $sce.trustAsHtml(html)
        }
     });

ppdbApp.run(['$rootScope', '$location', '$cookieStore', '$state',
    function ($rootScope, $location, $cookieStore, $state) {
    	$rootScope.$on('$routeChangeSuccess', function() {
	        document.title = $state.current.title;
	    });
        console.log($state.current);
			  //$window.ga('create', 'UA-99897280-1', 'auto');
			  //$window.ga('send', 'pageview', "/guru/#"+$location.path());
        // keep user logged in after page refresh
         $rootScope.globals = $cookieStore.get('globalsiswa') || {};
         //$rootScope.dataujian = $cookieStore.get('dataujian') || {};
        if ($rootScope.globals.currentUser) {
           // RestApi.defaults.headers.common['Authorization'] = 'Basic ' + $rootScope.globals.currentUser.authdata; // jshint ignore:line
            id_kelas = $rootScope.globals.currentUser.kelas;
        }

        $rootScope.$on('$locationChangeStart', function (event, next, current) {
            // redirect to login page if not logged in
            if ($location.path() !== '/login' && !$rootScope.globals.currentUser) {
                $location.path('/login');
            }
        });   
	}]);

// Login Controller


// Factory Login
ppdbApp.factory('AuthenticationService',
    ['Base64', 'authServer', '$cookieStore', '$rootScope', '$timeout',
    function (Base64, authServer, $cookieStore, $rootScope, $timeout) {
        var service = {};

        service.Login = function (username, password, callback) {
            /* Dummy authentication for testing, uses $timeout to simulate api call
             ----------------------------------------------*/
            // $timeout(function () {
            //     var response = { success: username === 'test' && password === 'test' };
            //     if (!response.success) {
            //         response.message = 'Username or password is incorrect';
            //     }
            //     callback(response);
            //     console.log(response);
            // }, 1000);

            /* Use this for real authentication
             ----------------------------------------------*/
			 authServer.post('api/auth/loginsiswa' , { username: username, password: password, ip:myclientip },function (response) {
                $timeout(function() {
		            callback(response);  
				}, 1000);                                      
			});
        };        

        service.SetCredentials = function (username, password, nama, alamat,level,kelas) {
			if( level=="siswa"){
            var authdata = Base64.encode(username + ':' + password);
            id_kelas = kelas;
            $rootScope.globals = {
                currentUser: {
                    username: username,                    
                    namalengkap: nama,                    
                    alamat: alamat,
                    leveluser:level,                    
                    kelas:kelas,                    
                    authdata: authdata
                }
            };
            document.cookie = "username="+username;       // $rootScope.ppdbServ.showData();
 
            //RestApi.defaults.headers.common['Authorization'] = 'Basic ' + authdata; // jshint ignore:line
            $cookieStore.put('globalsiswa', $rootScope.globals);
			}
			else {
			$('html').addClass("js");
			$("#kop").html('<div><b>Maaf, hanya untuk peserta ujian</b></div><br><img src="img/stop.png" alt="" width="80px"/><br><br><div id="message"><b><a href="admin">Klik disini untuk login admin dan pengawas ujian</a></b></div>');
			}
        };

        service.ClearCredentials = function () {
            $rootScope.globals = {};
			$cookieStore.remove('dataujian');
            $cookieStore.remove('globalsiswa');
            $cookieStore.remove('nomorujian');
            $cookieStore.remove('selectujian');
            document.cookie = "username=''";       // $rootScope.ppdbServ.showData();
            //RestApi.defaults.headers.common.Authorization = 'Basic ';
        };

        return service;
    }
]);


// main controler / core

ppdbApp.controller('ctrlApp', ['$scope','$rootScope','$location','ppdbServ','$window','RestApi','$state','cfpLoadingBar','$timeout','AuthenticationService','$interval','Notification','$cookieStore','$sce','$cookies', function ($scope, $rootScope, $location , ppdbServ, $window, RestApi,  $route , cfpLoadingBar, $timeout, AuthenticationService, $interval, Notification,$cookieStore,$sce,$cookies) {
  $scope.myip = myclientip;
	console.log($scope.myip);
	$rootScope.globals = $cookieStore.get('globalsiswa') || {};
	$scope.dataujian = $cookieStore.get('dataujian') || {};
    $rootScope.selectujian = $cookieStore.get('selectujian') || '';
	console.log($rootScope.globals);
	console.log($rootScope.selectujian);
	$scope.nomorujian = $cookieStore.get('nomorujian') || 0;
	//alert($scope.nomorujian);
    $scope.ppdbServ = ppdbServ;        
    $scope.sekolah = sekolah;
	$scope.myTitle = sekolah;
    $scope.productform = {};
    $rootScope.detailujian = [];
    $rootScope.getProfile = function() {
		RestApi.get('api/siswa/data/getprofile',function (data) {
				$timeout(function() {
					if(data.success == true){
						$scope.profile = data.data;
						$scope.$apply();
					}
					else{
						//$scope.logout();
					}
				});
			});
	}; 
    $rootScope.getUjian = function() {
		RestApi.get('api/siswa/data/getujian/'+myclientip+"/"+$rootScope.selectujian,function (data) {
				$timeout(function() {
					if(data.success == true){
						$rootScope.detailujian = data['data'];
						$rootScope.detailujian['tokenku'] = "";
						//$scope.$apply();
					}
				});
			});
	};
    if($rootScope.globals.currentUser) {
		$rootScope.getProfile();
	}
    if($rootScope.selectujian !== ""){
		$rootScope.getUjian();
	}
    $scope.shows = [];
	


	$scope.timerku = "00:00";
	$scope.producteditform = {};
    $scope.productform.id = $location.search().id;
    $scope.remoteUrlRequestFn = function(str) {
          console.log(str);
            return {q: str};
    };
	

 
    $scope.divkelas = false;
	$scope.filterkelas =[];
    $scope.ujiankelas = function(idujian, namaujian) {
         $scope.divkelas = true;
         $scope.listujian.id_ujian = idujian;
         $scope.filterkelas.id_ujian = idujian;
         $scope.listujian.namaujian= namaujian;
    }

	$scope.showlogout = false;
    $rootScope.dologout = function() {
		$scope.logout();
	}
    $scope.logout = function() {
		$("#myModal1").hide();
		$('html').addClass("js");
        RestApi.post('api/siswa/data/clientlogout',{ip:myclientip},function(response){
            $timeout(function(){
                if (response.success == true) {
					$scope.soal = [];
					$scope.divkelas = false;
					$scope.divtambah = false;
					$scope.divlistsoal = false;
					$scope.listsoall = [];
                    window.localStorage.clear();
                    angular.forEach($cookies.getAll(), function (v, k) {
                        console.log(k);
                        if(k!=='DEV_API'){
							$cookieStore.remove(k);
						}
                    });
 					$location.path('/login');
					location.reload();
							}
                else {
 					location.reload();  
                }
           });
        });
	}
	//dialogKosongKonfirmasi
    $scope.logoutq = function() {
		$("#myModal1").show();
	}
    $scope.batalout = function() {
		//$scope.showlogout = true;
		$("#myModal1").hide();
	}
    $scope.batalfin = function() {
		$scope.ryakin = false;
		$scope.tyakin = false;
		$scope.keraguan = false;
		$scope.jwkosong = false;
		$.colorbox.close();
	}

    $scope.batalerror = function() {
		$.colorbox.close();
		$location.path('/mulai');
	}
	//cfpLoadingBar.start();
	$scope.currentPage = 1;
  	$scope.pageSize = 10;

  	$scope.sizePaging =[
        {showPage: 5},
        {showPage: 10},
        {showPage: 30},
        {showPage: 50}
    ];    

	$rootScope.$on('$routeChangeSuccess', function() {
		    cfpLoadingBar.complete();
            if ($state.current.activetab == 'home') {
                    console.log($state.current);
                    $scope.timerrunning= $cookieStore.get('datatimer') || false;        
                    if($scope.timerrunning) {
                        clearInterval(timeinterval);
                        $cookieStore.put('datatimer', false);
                        $timeout(function() {
                            location.reload();
                        }, 1000);
                    }
            }
    		$timeout(function() {        
    			if ($location.path() !== '/login') {
     				$scope.getProfile();
    			};
    		});

    });


}]);


// Product Controller 



// Service Inventory
ppdbApp.service('ppdbServ', ['$rootScope','RestApi','$timeout','AuthenticationService','Notification','$location', function($rootScope, RestApi,  $timeout, AuthenticationService, Notification,$location) {
    // getTransaksi
	//var hasilcek = false;
	$rootScope.listujianku = {};
	this.showData = function() {
        if($rootScope.globals.currentUser) {
            $rootScope.getProfile();
			if ($rootScope.globals.currentUser.leveluser == 'siswa') {
				this.showData1();
				//this.showData2();
			}
			else{
				$rootScope.dologout();
			}
	   	}
        else{
            $location.path('/login');
        }
 	// 
	}
	this.showData1 = function() {
		RestApi.get('api/siswa/ujian/daftarujian/'+myclientip,function (data) {            	
			$timeout(function(){
               	$rootScope.dataujian = data;
               	$rootScope.listujianku = data;
                
               	// console.log(transaksi);
                //$rootScope.jujian= $rootScope.dataujian.length;
                //Notification.success({message: 'Success notification 20s', delay: 5000});
				reloadStatus = true;
				reloadServer = 300;
				Notification.success({message: '<center>Data diperbaharui</center>', delay: 5000});

            });
        });
	}	
	

}]);

ppdbApp.service('localstore', ['$window', function ($window) {

	return {

		get: function (key) {
			if ($window.localStorage [key]) {
				var cart = angular.fromJson($window.localStorage [key]);
				return JSON.parse(cart);
			}
			return false;

		},

		getItem: function (key) {
			if ($window.localStorage [key]) {
				var cart = angular.fromJson($window.localStorage [key]);
				return cart;
			}
			return false;

		},
		set: function (key, val) {

			if (val === undefined) {
				$window.localStorage .removeItem(key);
			} else {
				$window.localStorage [key] = angular.toJson(val);
			}
			return $window.localStorage [key];
		}
	}
}])

ppdbApp.factory('Base64', function () {
    /* jshint ignore:start */

    var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

    return {
        encode: function (input) {
            var output = "";
            var chr1, chr2, chr3 = "";
            var enc1, enc2, enc3, enc4 = "";
            var i = 0;

            do {
                chr1 = input.charCodeAt(i++);
                chr2 = input.charCodeAt(i++);
                chr3 = input.charCodeAt(i++);

                enc1 = chr1 >> 2;
                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                enc4 = chr3 & 63;

                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                }

                output = output +
                    keyStr.charAt(enc1) +
                    keyStr.charAt(enc2) +
                    keyStr.charAt(enc3) +
                    keyStr.charAt(enc4);
                chr1 = chr2 = chr3 = "";
                enc1 = enc2 = enc3 = enc4 = "";
            } while (i < input.length);

            return output;
        },

        decode: function (input) {
            var output = "";
            var chr1, chr2, chr3 = "";
            var enc1, enc2, enc3, enc4 = "";
            var i = 0;

            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
            var base64test = /[^A-Za-z0-9\+\/\=]/g;
            if (base64test.exec(input)) {
                window.alert("There were invalid base64 characters in the input text.\n" +
                    "Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\n" +
                    "Expect errors in decoding.");
            }
            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

            do {
                enc1 = keyStr.indexOf(input.charAt(i++));
                enc2 = keyStr.indexOf(input.charAt(i++));
                enc3 = keyStr.indexOf(input.charAt(i++));
                enc4 = keyStr.indexOf(input.charAt(i++));

                chr1 = (enc1 << 2) | (enc2 >> 4);
                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                chr3 = ((enc3 & 3) << 6) | enc4;

                output = output + String.fromCharCode(chr1);

                if (enc3 != 64) {
                    output = output + String.fromCharCode(chr2);
                }
                if (enc4 != 64) {
                    output = output + String.fromCharCode(chr3);
                }

                chr1 = chr2 = chr3 = "";
                enc1 = enc2 = enc3 = enc4 = "";

            } while (i < input.length);

            return output;
        }
    };

    /* jshint ignore:end */
});



jQuery(document).ready(function() {
    // $(document).on("click", ".table-click", function() {
    //     var anchorTarget = $(this).attr('data-href');
    //     window.location=anchorTarget;
    // });
});
// Route 
angular.module('ppdbApp').config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {
    $urlRouterProvider.otherwise("/login");  
    
	var baseTitle = 'CBT MTsN 1| ';
    $stateProvider
    .state('/',{
        url: "/",
		title			: baseTitle ,
		templateUrl		: 'asset/siswa/Views/Home/Index.html',
		controller 		: 'home',	
		activetab		: 'home'			 
	}).state('home',{
        url: "/home",
		title			: baseTitle ,
		templateUrl		: 'asset/siswa/Views/Home/Index.html',
        controller 		: 'home',	
		activetab		: 'home'		
    }).state('mulai',{
        url: "/mulai",
        title           : baseTitle ,
        templateUrl     : 'asset/siswa/Views/Test/Paket.html',
        controller        : 'mulai',    
        activetab       : 'soal'        
    }).state('selesai',{
        url: "/selesai",
        title           : baseTitle ,
        templateUrl     : 'asset/siswa/Views/Test/TestSelesai.html',
        //controller    : 'mulai',    
        activetab       : 'soal'        
    }).state('timeout',{
        url: "/timeout",
        title           : baseTitle ,
        templateUrl     : 'asset/siswa/Views/Test/TestTimeout.html',
        //controller        : 'mulai',    
        activetab       : 'soal'        
	}).state('ujian',{
        url: "/ujian",
		title			: baseTitle ,
		templateUrl		: 'asset/siswa/Views/Test/Index.html',
		controller 		: 'ujian',	
		activetab		: 'ujian',		
	}).state('login',{
        url: "/login",
		title			: baseTitle ,
        templateUrl     : "asset/siswa/Views/Account/Login.html",
		activetab		: 'login',	
		controller 		: 'LoginController'	 
	})

	// $locationProvider.html5Mode(true);
	// if(window.history && window.history.pushState){
	//   $locationProvider.html5Mode(true);
	// }
	
}]);

// Http Request Method
//const axios = require('axios').default;
angular.module('ppdbApp').factory('authServer',
    ['$http', '$rootScope', '$timeout',
    function ($http, $rootScope, $timeout) {
        var service = {};
        service.get = function (url, callback) {
			$.post(url) 
            .done(function (response,status, xhr) {				
				$timeout(function() {
					callback(response);
				}, 1000);				
			})
            .fail(function(data, status, headers, config) {				
              	Swal.fire({
					type: 'error',
					title: 'Gagal menyimpan',
					text: 'Koneksi keserver gagal',
					showConfirmButton: false,
					timer: 1500
				})
				callback({success:false,message:'Gagal menghubungi server.'});
            });
        };
        service.post = function (url, data, callback) {
            $.post(url, data)
            .done(function (response,status, xhr) {				
				$timeout(function() {
					callback(response);
				}, 1000);				
            })
            .fail(function(data, status, headers, config) {
             	Swal.fire({
					type: 'error',
					title: 'Gagal menyimpan',
					text: 'Koneksi keserver gagal',
					showConfirmButton: false,
					timer: 1500
				})
				callback({success:false,message:'Gagal menghubungi server.'});
            });
        };
        return service;
    }]);
angular.module('ppdbApp').factory('ApiServer',
    ['$http', '$rootScope', '$timeout',
    function ($http, $rootScope, $timeout) {
        var service = {};
        service.get = function (url, callback) {
			//$rootScope.cekLogin();
			$.post(url) 
            .done(function (response,status, xhr) {
				var ct = xhr.getResponseHeader("content-type") || "";
				if (ct == "application/json") {
					$timeout(function() {
						callback(response);
					}, 1000);
				}else{
					callback({success:false,message:'Terdapat kesalahan pada server.'});
				}
			})
            .fail(function(data, status, headers, config) {				
              	Swal.fire({
					type: 'error',
					title: 'Gagal menyimpan',
					text: 'Koneksi keserver gagal',
					showConfirmButton: false,
					timer: 1500
				})
				callback({success:false,message:'Gagal menghubungi server.'});
            });
        };
        service.post = function (url, data, callback) {
			//$rootScope.cekLogin();
            $.post(url, data)
            .done(function (response,status, xhr) {
				var ct = xhr.getResponseHeader("content-type") || "";
				if (ct == "application/json") {
					$timeout(function() {
						callback(response);
					}, 1000);
				}else{
					callback({success:false,message:'Terdapat kesalahan pada server.'});
				}
            })
            .fail(function(data, status, headers, config) {
             	Swal.fire({
					type: 'error',
					title: 'Gagal menyimpan',
					text: 'Koneksi keserver gagal',
					showConfirmButton: false,
					timer: 1500
				})
				callback({success:false,message:'Gagal menghubungi server.'});
            });
        };
        return service;
    }]);
angular.module('ppdbApp').factory('RestApi',
    ['$http', '$rootScope', '$timeout','localstore',
    function ($http, $rootScope, $timeout,localstore) {

        var service = {};
        service.get = function (url, callback) {
			//$rootScope.cekLogin();
			let header = {
				headers:{
					Authorization: 'Bearer ' + localstore.getItem("authdata")
				}
			}
			console.log(header);
			axios.defaults.baseURL = urlServer
			axios.get(url,header)
			.then(function (response) {
				console.log(response);
				var ct = response.headers['content-type'] || "";
				if (ct.includes("application/json")) {
					$timeout(function() {
						callback(response.data);
					}, 1000);
				}else{
					callback({success:false,message:'Terdapat kesalahan pada server.'});
				}
			})
			.catch(function (error) {
				callback({success:false,message:'Gagal menghubungi server.'});
			});
        };
        service.post = function (url, data, callback) {
			//$rootScope.cekLogin();
			const header = {
				headers:{
					Authorization: 'Bearer ' + localstore.getItem("authdata"),
				}
			}
			console.log(header);
			axios.defaults.baseURL = urlServer
			axios.post(url,data,header)
			.then(function (response) {
				var ct = response.headers['content-type'] || "";
				if (ct.includes("application/json")) {
					$timeout(function() {
						callback(response.data);
					}, 1000);
				}else{
					callback({success:false,message:'Terdapat kesalahan pada server.'});
				}
			})
			.catch(function (error) {
				callback({success:false,message:'Gagal menghubungi server.'});
			});
            
        };
        return service;
    }]);
	angular.module('ppdbApp').service('fileUploadService', function ($http, $q) {
 
        this.uploadFileToUrl = function (file, uploadUrl) {
            //FormData, object of key/value pair for form fields and values
            var fileFormData = new FormData();
            fileFormData.append('file', file);
 
            var deffered = $q.defer();
            $.post(uploadUrl, fileFormData, {
                transformRequest: angular.identity,
                headers: {'Content-Type': undefined}
 
            }).done(function (response) {
                deffered.resolve(response);
 
            }).fail(function (response) {
                deffered.reject(response);
            });
 
            return deffered.promise;
        }
});
ppdbApp.factory('common',
    ['$http', '$rootScope', '$timeout',
    function ($http, $rootScope, $timeout) {
        var service = {};
        service.get = function (url, callback) {
			$rootScope.cekLogin();
            $.post(url) 
            .success(function (response,status, xhr) {
				var ct = xhr.getResponseHeader("content-type") || "";
				if (ct == "application/json") {
					$timeout(function() {
						callback(response);
					}, 1000);
				}else{
					callback({success:false,message:'Terdapat kesalahan pada server.'});
				}
			})
            .error(function(data, status, headers, config) {				
              	Swal.fire({
					type: 'error',
					title: 'Gagal menyimpan',
					text: 'Koneksi keserver gagal',
					showConfirmButton: false,
					timer: 1500
				})
				callback({success:false,message:'Gagal menghubungi server.'});
            });
        };
        service.post = function (url, data, callback) {
			$rootScope.cekLogin();
            $.post(url, data)
            .success(function (response,status, xhr) {
				var ct = xhr.getResponseHeader("content-type") || "";
				if (ct == "application/json") {
					$timeout(function() {
						callback(response);
					}, 1000);
				}else{
					callback({success:false,message:'Terdapat kesalahan pada server.'});
				}
            })
            .error(function(data, status, headers, config) {
             	Swal.fire({
					type: 'error',
					title: 'Gagal menyimpan',
					text: 'Koneksi keserver gagal',
					showConfirmButton: false,
					timer: 1500
				})
				callback({success:false,message:'Gagal menghubungi server.'});
            });
        };
        return service;
    }]);
ppdbApp.factory('nowTime', ['$timeout',function($timeout) {
		//TimeZoneDiv-TzDifference;
		var nowTime = Date.now()-(TimeZoneDiv*60000);
		console.log(nowTime);
		//var TimeZoneDiv = nowTime.getTimezoneOffset();
		var updateTime = function() { 
			$timeout(function(){ 
				nowTime = Date.now() -(TimeZoneDiv*60000); 
				updateTime(); 
			}, 30000); 
		};
		updateTime();
		return function() {
		  return nowTime; 
		};
	  }]);
ppdbApp.factory('timeAgo',['$timeout', function($timeout) {
		var service = {
		  settings: {
			refreshMillis: 60000,
			allowFuture: false,
			strings: {
			  prefixAgo: null,
			  prefixFromNow: null,
			  suffixAgo: "lalu",
			  suffixFromNow: "dari sekarang",
			  seconds: "baru saja",
			  minute: "semenit",
			  minutes: "%d menit",
			  hour: "Sejam",
			  hours: "%d jam",
			  day: "sehari",
			  days: "%d hari",
			  month: "sebulan",
			  months: "%d bulan",
			  year: "setahun",
			  years: "%d tahun",
			  numbers: []
			}
		  },
		  inWords: function(distanceMillis) {
			var $l = service.settings.strings;
			var prefix = $l.prefixAgo;
			var suffix = $l.suffixAgo;
			if (service.settings.allowFuture) {
			  if (distanceMillis < 0) {
				prefix = $l.prefixFromNow;
				suffix = $l.suffixFromNow;
			  }
			}
	
			var seconds = Math.abs(distanceMillis) / 1000;
			var minutes = seconds / 60;
			var hours = minutes / 60;
			var days = hours / 24;
			var years = days / 365;
	
			function substitute(stringOrFunction, number) {
			  var string = $.isFunction(stringOrFunction) ? stringOrFunction(number, distanceMillis) : stringOrFunction;
			  var value = ($l.numbers && $l.numbers[number]) || number;
			  return string.replace(/%d/i, value);
			}
	
			var words = seconds < 45 && substitute($l.seconds, Math.round(seconds)) ||
			seconds < 90 && substitute($l.minute, 1) ||
			minutes < 45 && substitute($l.minutes, Math.round(minutes)) ||
			minutes < 90 && substitute($l.hour, 1) ||
			hours < 24 && substitute($l.hours, Math.round(hours)) ||
			hours < 42 && substitute($l.day, 1) ||
			days < 30 && substitute($l.days, Math.round(days)) ||
			days < 45 && substitute($l.month, 1) ||
			days < 365 && substitute($l.months, Math.round(days / 30)) ||
			years < 1.5 && substitute($l.year, 1) ||
			substitute($l.years, Math.round(years));
	
			var separator = $l.wordSeparator === undefined ?  " " : $l.wordSeparator;
			if(seconds < 45){
				return $.trim([prefix, words, ""].join(separator));				
			}else{
				return $.trim([prefix, words, suffix].join(separator));
			}
		  },
		parse: function(iso8601) {
		  if (angular.isNumber(iso8601)) return parseInt(iso8601,10);
		  var s = $.trim(iso8601);
		  s = s.replace(/\.\d+/,""); // remove milliseconds
		  s = s.replace(/-/,"/").replace(/-/,"/");
		  s = s.replace(/T/," ").replace(/Z/," UTC");
		  s = s.replace(/([\+\-]\d\d)\:?(\d\d)/," $1$2"); // -04:00 -> -0400
		  return new Date(s);
		  }
		};
		return service;
	}]); 
ppdbApp.controller('LoginController',
    ['$scope', '$rootScope', '$location', 'AuthenticationService',"$state",
    function ($scope, $rootScope, $location, AuthenticationService,$state) {
        // reset login status        

        if ($scope.globals) {
        	$location.path('/');
        };

        $scope.login = function () {
            $.blockUI({}); 
            AuthenticationService.Login($scope.username, $scope.password, function (response) {
				$.unblockUI();
                if (response.success) {
					console.log(response);
                    $rootScope.globals = response.data;
                    $scope.ppdbServ.showData();
					$location.path('/home');
                } else {
                    $scope.error = response.message;
                }
            });
        };
    }
]);
ppdbApp.controller('mulai', ['$scope','$rootScope','$location','ppdbServ','$window','RestApi','$state','cfpLoadingBar','$timeout','AuthenticationService','$interval','Notification','$cookieStore', function ($scope, $rootScope, $location , ppdbServ, $window, RestApi,  $route , cfpLoadingBar, $timeout, AuthenticationService, $interval, Notification,$cookieStore){
		$scope.dataujian = $cookieStore.get('dataujian') || {};
		if($scope.dataujian.mulai == true){
			//$scope.kerjakan1($scope.dataujian.id_ujian, $scope.dataujian.waktu);
		}
		else{
            RestApi.post('api/siswa/ujian/cektoken',{idujian:$scope.dataujian.id_ujian, kelas:$scope.dataujian.id_kelas,token:$scope.dataujian.token},function(response){
            			$timeout(function(){
                		if (response.success == true) {
                    			$scope.dataujian = response.data[0];
 						        $cookieStore.put('dataujian', response.data[0]);
                   				$timeout(function() {
						        },60000);
               			}
                		else {
					        Notification.error({message: '<center>Kode TOKEN Tidak sesuai </center>', replaceMessage: true, delay: 5000}); 
                		}
           			});
        		});

		}
		 $scope.kerjakan = function() {
			$location.path('/ujian');        
    	};
		
	

}]);
ppdbApp.controller('ujian', ['$scope','$rootScope','$location','ppdbServ','$window','RestApi','$state','cfpLoadingBar','$timeout','AuthenticationService','$interval','Notification','$cookieStore','$sce', function ($scope, $rootScope, $location , ppdbServ, $window, RestApi, $route , cfpLoadingBar, $timeout, AuthenticationService, $interval, Notification,$cookieStore,$sce){
	$scope.dataujian = $cookieStore.get('dataujian') || {};
	$scope.dataujian = $cookieStore.get('dataujian') || {};
	$scope.timerrunning= $cookieStore.get('datatimer') || false;
	$scope.kerjakan1 = function(idujian, durasi) {
        //cfpLoadingBar.start();
		$scope.toglesoal = false;
		$.blockUI({ 
            message: '<h1>Tunggu...!</h1>'
			}); 
		$scope.soal = $cookieStore.get('datasoal') || [];
        $scope.soal = [];
        RestApi.post('api/siswa/ujian/kerjaujian',{ujian:idujian,kelas:id_kelas,ip:$scope.myip},function(response){
            $timeout(function(){
                if (response.success == true) {
                   $scope.keraguan = false;
                    $scope.jwkosong = false;
                    $scope.ryakin = false;
                    $scope.tyakin = false;
                    $scope.soalku.durasi = durasi*60;
                    $scope.soalku.idujian = idujian;
                    $scope.datasoal = response.data;
                    $scope.datasoallength = response.data.length;
					if($scope.datasoallength > 0){
						if($scope.nomorujian > $scope.datasoallength) $scope.nomorujian = 0;
						$scope.soalku.selisih = response.selisih;
						var timeInSecond = response.selisih*1000;
						var ragu = true;
						for (var i = 0; i < response.data.length; i++) {
							if (response.data[i]['ragu'] == 1) ragu = true;
							else ragu = false;
							$scope.soal[i]={jawab: response.data[i]['jawab'], ragu:ragu , idsoal:response.data[i]['id_ujian_detail']};
						}
						$scope.lastTime= $cookieStore.get($scope.dataujian.id_ujian) || 0;  
						if(timeInSecond > $scope.lastTime && $scope.lastTime > 0) timeInSecond = $scope.lastTime;
						var currentTime = Date.parse(new Date());
						var deadline = new Date(currentTime + timeInSecond);
						var t0 = Date.parse(deadline) - Date.parse(new Date());
						$scope.showsoal($scope.nomorujian);
						$scope.timerujian(deadline);
						$cookieStore.put('datatimer', true);
						$timeout(function(){
							$scope.syncsoal(0,timeInSecond) ;
						},1000);             
					}else{
						$.unblockUI();
						Notification.error({message: '<center>Data ujian belum siap </center>', replaceMessage: true, delay: 5000});
						
						$location.path('/mulai');
						
					}
                    //$scope.$apply();
                }
			   else if (response.error !== 'selesai') {
					$scope.errortes = response.error;
					$.unblockUI();
					$.colorbox({ inline: true, href: "#dialogErrorKonfirmasi" });
			   }
			   else {
			   		$.unblockUI();
			   		$location.path('/home');
			   }
            });
        });
    };
	$scope.keraguan = false;
	$scope.jwkosong = false;
	$scope.ryakin = false;
	$scope.tyakin = false;
    $scope.selesaikan = function() {
		if ($scope.ryakin == false && $scope.ttotal < 3600 ){
			for (var i = 0; i < $scope.datasoallength; i++) {
				if ($scope.datasoal[i].ragu == true) {
					$scope.keraguan = true;
					//alert (i);
				}
				if ($scope.datasoal[i].jawab == "") {
					$scope.jwkosong = true;
				}
			}
			if ($scope.keraguan == true) {
				$.colorbox({ inline: true, href: "#dialogRaguKonfirmasi" });
			}
			else $.colorbox({ inline: true, href: "#dialogKonfirmasi" });
		}
		else if($scope.tyakin == false && $scope.ttotal > 3600 ) {
			$.colorbox({ maxWidth:'95%', maxHeight:'95%', inline: true, href: "#dialogWaktuBanyak" });
		}
		else if($scope.tyakin == false && $scope.ttotal > 60 ) {
			$.colorbox({ inline: true, href: "#dialogStillTimeKonfirmasi" });
		}
		else {
			$scope.ujianselesai();
			$.colorbox.close();
		}
	}
    $scope.konfirf = function() {
		$scope.ryakin = !$scope.ryakin;
	}	
    $scope.konfirt = function() {
		$scope.tyakin = !$scope.tyakin;
	}    

$scope.trustAsHtml = function(string) {
    return $sce.trustAsHtml(string);
};
    $scope.ujianselesai = function() {
		$.blockUI({ 
            message: '<h1>Tunggu...!</h1>'
		}); 
        $scope.soal = [];
		RestApi.post('api/siswa/ujian/soalselesai',{idujian:$rootScope.detailujian.idujian},function(response){
            $timeout(function(){
                if (response.success == true) {
					$.unblockUI(); 
					clearInterval(timeinterval);
					$scope.dataujian = {};
                    window.localStorage.clear();
					$cookieStore.remove('dataujian');
					$cookieStore.remove('nomorujian');
                    //alert(response.length)
					$scope.ppdbServ.showData();
                     Notification.success({message: '<center>Ujian selesai </center>', replaceMessage: true, delay: 5000});
					$location.path('/home/');
               }
                else {
                    $timeout(function(){ 
                        $scope.ujianselesai();
                    }, 1000);    
                }
           });
        });
        //$scope.simpanjawaban();
    };
   $scope.soalku = [];
    $scope.soalbaru = [];
    $scope.divtambah = false;
    $scope.divlistsoal = false;
    $scope.datasoallength = 0;
    $scope.timeralert = false;
    $scope.listujian = [];

     $scope.listsoal = function(idujian) {
 		cfpLoadingBar.start();
        $scope.soal = [];
        $scope.listsoall = [];
	    RestApi.get(urlServer + 'list.php?action=getsoallist&ujian='+idujian+'&username='+$scope.globals.currentUser.username,function(response){
            $timeout(function(){
                if (response.success == true) {
                    //alert(response.length)
                    $scope.divlistsoal = true;
                     $scope.listsoall = response.data;
                    for (var i = 0; i < response.data.length; i++) {
                            //$scope.soal[i]={jawab: response.data[i]['jawab'], idsoal:response.data[i]['id_ujian_detail']};
                        }
 					$scope.$apply();
                }
            });
        });
		   cfpLoadingBar.complete();

    };
	$scope.soal = [];
	$scope.datasoal = [];
    $scope.gagal = 0;
    $scope.syncsoal = function(nomor,timeInSecond) {
        if(nomor < $scope.datasoal.length){
            $scope.syncNo = nomor+1;
            $scope.syncTot = $scope.datasoal.length;
            //$.colorbox({ inline: true, href: "#dialogSycSoal" });
            $scope.cookiesSoal = window.localStorage.getItem($scope.datasoal[nomor].id_soal) || '';
            if($scope.datasoal[nomor].isi_soal == "" && $scope.cookiesSoal == ""){
				RestApi.post('api/siswa/ujian/ambilsoalujian',{idujian:$rootScope.detailujian.idujian},function(response){
                        $timeout(function(){
                            if (response.success == true) {
								$scope.gagal = 0;
								angular.forEach(response.data, function(value, key) {
									window.localStorage.setItem(key, value);
								});
                                                                
                           }else{
                                $scope.gagal++;
                                if($scope.gagal < 4){
                                     $timeout(function(){
                                        $scope.syncsoal(nomor,timeInSecond);                 
                                    },1000);                                  
                                }
                            }
                        });
                    });
            }else{
                 if($scope.cookiesSoal !== "") {
                    $scope.datasoal[nomor].isi_soal = $scope.cookiesSoal;                   
                 }      
                $scope.syncsoal(nomor+1,timeInSecond);                                                  
            }
        }else{
            //$.colorbox.close();
        }

    }
	$scope.showsoal = function(nomor) {
		if((nomor+1) > $scope.datasoal.length){
			nomor = $scope.datasoal.length-1;
		}
			$.blockUI({ 
            message: '<h1>Tunggu...!</h1>'
			}); 
        if(nomor < 0 ) nomor = 0;
	    $cookieStore.put('nomorujian', nomor);
		$scope.nomorujian = nomor;
	    $scope.soalku.opsi1 = null;
	    $scope.soalku.opsi2 = null;
	    $scope.soalku.opsi3 = null;
	    $scope.soalku.opsi4 = null;
	    $scope.soalku.opsi5 = null;
        $scope.soalku.id = nomor;
        $scope.soalku.no = nomor+1;
        $scope.soalku.id_ujian_detail = $scope.datasoal[nomor].id_ujian_detail;
        $scope.soalku.id_ujian = $scope.datasoal[nomor].id_ujian;
        //$scope.soalku.pilihjawaban = "";
        $scope.soalku.jawab = $scope.soal[nomor].jawab;
        $scope.soalku.ragu = $scope.soal[nomor].ragu;
        $scope.soalku.id_soal = $scope.datasoal[nomor].id_soal;
        $scope.soalku.isi_soal = $scope.datasoal[nomor].isi_soal;
        $scope.soalku.audio = $scope.datasoal[nomor].audio;
        $scope.soalku.type = $scope.datasoal[nomor].type;
        $scope.cookiesSoal = window.localStorage.getItem($scope.soalku.id_soal) || '';
		if($scope.datasoal[nomor].isi_soal == "" && $scope.cookiesSoal == ""){
			RestApi.post('api/siswa/ujian/ambilsoaltes',{id_ujian_detail:$scope.datasoal[nomor].id_ujian_detail},function(response){
					$timeout(function(){
						if (response.success == true) {
							$scope.datasoal[nomor].isi_soal = response.data.isi_soal;					
							$scope.soalku.isi_soal = $scope.datasoal[nomor].isi_soal;
                            window.localStorage.setItem($scope.soalku.id_soal, $scope.datasoal[nomor].isi_soal);
							$("#jquery_jplayer_1").jPlayer("destroy");
							$.unblockUI();
							if($scope.soalku.audio !== ""){ 
									$("#jquery_jplayer_1").jPlayer({
										ready: function () {
											$(this).jPlayer("setMedia", {
												title: "Listerning",
												mp3: $scope.soalku.audio
											}); 
										},
										swfPath: "../../dist/jplayer",
										supplied: "mp3",
										wmode: "window",
										useStateClassSkin: true,
										autoBlur: false,
										smoothPlayBar: true,
										keyEnabled: true,
										remainingDuration: true,
										toggleDuration: true
									});
									$("#jquery_jplayer_1").jPlayer("load");
							}
						}else{
							$.blockUI({ 
							message: '<h1>Gagal, tunggu...!</h1>'
							}); 
							$timeout(function(){
								$scope.showsoal(nomor);					
							},1000);
						}
					});
				});
		
		}else{
             if($scope.cookiesSoal !== "") {
                $scope.datasoal[nomor].isi_soal = $scope.cookiesSoal;                   
                $scope.soalku.isi_soal = $scope.datasoal[nomor].isi_soal;
             }      
					$("#jquery_jplayer_1").jPlayer("destroy");
					if($scope.soalku.audio !== ""){ 
							$("#jquery_jplayer_1").jPlayer({
								ready: function () {
									$(this).jPlayer("setMedia", {
										title: "Listerning",
										mp3: $scope.soalku.audio
									});
								},
								swfPath: "../../dist/jplayer",
								supplied: "mp3",
								wmode: "window",
								useStateClassSkin: true,
								autoBlur: false,
								smoothPlayBar: true,
								keyEnabled: true,
								remainingDuration: true,
								toggleDuration: true
							});
							$("#jquery_jplayer_1").jPlayer("load");
					}
 					$.unblockUI();
					$timeout(function(){
						if($scope.soalku.type == "1" || $scope.soalku.type == "0"){
							if (document.getElementById("optionA") != null){
								document.getElementById("optionA").src = 'asset/siswa/Assets/Images/optionA1.png';
								document.getElementById("optionA").parentElement.parentElement.style.backgroundColor ='';
								if($scope.soalku.jawab =="A"){
									document.getElementById("optionA").src = 'asset/siswa/Assets/Images/pilih.png';
								}
							}
							if (document.getElementById("optionB") != null){
								document.getElementById("optionB").src = 'asset/siswa/Assets/Images/optionB1.png';
								document.getElementById("optionB").parentElement.parentElement.style.backgroundColor ='';
								if($scope.soalku.jawab =="B"){
									document.getElementById("optionB").src = 'asset/siswa/Assets/Images/pilih.png';
								}
							}
							if (document.getElementById("optionC") != null){
								document.getElementById("optionC").src = 'asset/siswa/Assets/Images/optionC1.png';
								document.getElementById("optionC").parentElement.parentElement.style.backgroundColor ='';
								if($scope.soalku.jawab =="C"){
									document.getElementById("optionC").src = 'asset/siswa/Assets/Images/pilih.png';
								}
							}
							if (document.getElementById("optionD") != null){
								document.getElementById("optionD").src = 'asset/siswa/Assets/Images/optionD1.png';
								document.getElementById("optionD").parentElement.parentElement.style.backgroundColor ='';
								if($scope.soalku.jawab =="D"){
									document.getElementById("optionD").src = 'asset/siswa/Assets/Images/pilih.png';
								}
							}
							if (document.getElementById("optionE") != null){
								document.getElementById("optionE").src = 'asset/siswa/Assets/Images/optionE1.png';
								document.getElementById("optionE").parentElement.parentElement.style.backgroundColor ='';
								if($scope.soalku.jawab =="E"){
									document.getElementById("optionE").src = 'asset/siswa/Assets/Images/pilih.png';
								}
							}
							if (document.getElementById("optionZ") != null){
								document.getElementById("optionZ").src = 'asset/siswa/Assets/Images/none.png';
								document.getElementById("optionZ").parentElement.parentElement.style.backgroundColor ='';
								if($scope.soalku.jawab =="Z"){
									document.getElementById("optionZ").src = 'asset/siswa/Assets/Images/pilih.png';
								}
							}
						}else if($scope.soalku.type == "3"){
                            document.getElementById("optionS").value = $scope.soalku.jawab;
                        }
                        else if($scope.soalku.type == "4"){
                            if($scope.soalku.jawab == "1"){
                                document.getElementById("optionS1").checked = true;
                            }
                            else if($scope.soalku.jawab == "0"){
                                document.getElementById("optionS2").checked = true;
                            }                           
                        }
                        else if($scope.soalku.type == "5"){
                            var jawaban = $scope.soalku.jawab.split(",");
                            var lisjawaban = ["A","B","C","D","E"];
                            jawaban.forEach(function(item, index){
                                if(item == "1"){
                                    if (document.getElementById("optionM"+lisjawaban[index]) != null){
                                        document.getElementById("optionM"+lisjawaban[index]).src = 'Assets/Images/pilih.png';
                                    }
                                }
                            });
                        }
                        else if($scope.soalku.type == "6"){
                            var jawaban = $scope.soalku.jawab.split(",");
                            const list = document.getElementsByTagName("select");
                            var i = 0;
                            jawaban.forEach(function(item){
                                list[i].selectedIndex = item;
                                i++;
                            });
                            console.log(jawaban);
                            for (let i = 0; i < list.length; i++) {
                                var select = list[i];
                                var option = select.getElementsByTagName('option');                   
                                for (let j = 0; j < jawaban.length; j++) {                      
                                    if(i!==j && jawaban[j] > 0){
                                        option[jawaban[j]].style.display = 'none';
                                    }else{
                                        option[jawaban[j]].style.display = 'block';
                                    }
                                }
                                for (let j = 1; j < option.length; j++) {  
                                    if(jawaban.includes(j+'') && jawaban.indexOf(j+'') !== i)  option[j].style.display = 'none';
                                    else option[j].style.display = 'block';
                                }
                            }
                        }
					},200);
		}
    };
$scope.getTimeRemaining = function(endtime){
  var t = Date.parse(endtime) - Date.parse(new Date());
  $cookieStore.put($scope.dataujian.id_ujian, t); 
  var seconds = Math.floor( (t/1000) % 60 );
  var minutes = Math.floor( (t/1000/60) % 60 );
  var hours = Math.floor( (t/(1000*60*60)) % 24 );
  var days = Math.floor( t/(1000*60*60*24) );
  if (hours < 10) hours = "0"+hours;
  if (minutes < 10) minutes = "0"+minutes;
  if (seconds < 10) seconds = "0"+seconds;

  return {
    'total': t,
    'days': days,
    'hours': hours,
    'minutes': minutes,
    'seconds': seconds
  };
}
	$scope.timerujianku = "00:00:00";
	$scope.sisa_waktu = 10;
	$scope.sisa_counter = intervaltime;
    $scope.timerujian = function(endtime) {
        timeinterval = setInterval(function(){
        var t = $scope.getTimeRemaining(endtime);
		$scope.ttotal = t.total/1000;
        	$scope.timerujianku = t.hours + ':' + t.minutes + ':' + t.seconds;
		$scope.$apply();
		$scope.sisa_counter = $scope.sisa_counter - 1;
		$scope.sisa_waktu = t.total/1000;
		if($scope.sisa_counter == 0){
			$scope.sisa_counter = intervaltime;
			$scope.setsisa();
		}
        if(t.total/1000<=600){
            $scope.timeralert = !$scope.timeralert;
        }
        if(t.total<=0){
            clearInterval(timeinterval);
			$scope.setsisa();
            //alert('Waktu habis, klik OK untuk melihat hasil ujian anda.');
            $scope.ujianselesai();
       }
        else {

        }
      },1000);
    }
	$scope.setragu = function(pilihan, x) {
		if ($scope.soalku.ragu == true) $scope.soalku.ragu = false;
		else $scope.soalku.ragu = true;
		$scope.simpanjawaban(pilihan, x);
	}
	$scope.tersisa = {};
	$scope.counterror = 0;
	$scope.setsisa = function(){
		$scope.sisa_counter = intervaltime;
		$scope.tersisa.idujian = $scope.soalku.idujian;
		$scope.tersisa.ip = myclientip;
		$scope.tersisa.username = $scope.globals.currentUser.username;
		$scope.tersisa.sisa_waktu = $scope.sisa_waktu;
		RestApi.post('api/siswa/ujian/setsisa',$scope.tersisa,function(response){
			if (response.success == false) {
				$scope.sisa_counter = intervaltime;
				$scope.counterror++;
				if($scope.counterror > 5){
					$location.path('/timeout/');
				}
			}else{
				$scope.counterror = 0;
			}
				
        });		
	}
	$scope.answerA = function(){
		$scope.simpanjawaban("A",$scope.nomorujian);
	}
 	$scope.answerB = function(){
		$scope.simpanjawaban("B",$scope.nomorujian);
	}
	$scope.answerC = function(){
		$scope.simpanjawaban("C",$scope.nomorujian);
	}
	$scope.answerD = function(){
		$scope.simpanjawaban("D",$scope.nomorujian);
	}
	$scope.answerE = function(){
		$scope.simpanjawaban("E",$scope.nomorujian);
	}
	$scope.answerZ = function(){
		$scope.simpanjawaban("Z",$scope.nomorujian);
	}
	$scope.answerS = function(jawaban){
        $scope.simpanjawaban(jawaban,$scope.nomorujian);
    }
   $scope.simpanjawaban = function(pilihan, x) {
		$scope.setsisa();
         //var x = $scope.soalku.id;
		 //alert ($scope.soalku.ragu + " " + $scope.soal[x].ragu);
        if( $scope.soal[x].jawab !== pilihan || $scope.soal[x].ragu !== $scope.soalku.ragu ) {
        $scope.soal[x].jawab=pilihan;
        $scope.soal[x].ragu=$scope.soalku.ragu;
        $scope.soalku.jawab = pilihan;
        $scope.datasoal[x].jawab = pilihan;
        $scope.datasoal[x].ragu = $scope.soalku.ragu;
		console.log($scope.soal);
        var y = x + 1;
		RestApi.post('api/siswa/ujian/simpanjawaban/'+id_kelas,$scope.soal[x],function(response){
            $timeout(function(){
                if (response.success == true) {
                    //alert(response.length)
                    Notification.success({message: '<center>Jawaban nomor '+ y +' disimpan</center>', replaceMessage: true, delay: 5000});
         
                    //$scope.$apply();
                }
                else {
                    $timeout(function(){ 
                        $scope.simpanjawaban(pilihan, x);
                    }, 1000);    
                }
           });
        });
           //cfpLoadingBar.complete();
         }  
    };
		if($scope.dataujian.mulai == true){
			$scope.kerjakan1($scope.dataujian.id_ujian, $scope.dataujian.waktu);
		}
		else{
		    RestApi.get(urlServer + 'list.php?action=cektoken&idujian='+$scope.dataujian.id_ujian+'&username='+$rootScope.globals.currentUser.username+'&kelas='+$scope.dataujian.id_kelas+'&token='+$scope.dataujian.token,function(response){
            $timeout(function(){
                if (response.success == true) {
                    //alert(response.length)
                    //$scope.closeeditForm();
                    $scope.dataujian = response.data[0];
 					$cookieStore.put('dataujian', response.data[0]);
					//alert (response.data[0].id_ujian);
                   $location.path('/mulai');
               }
                else {
				Notification.error({message: '<center>Kode TOKEN Tidak sesuai </center>', replaceMessage: true, delay: 5000});
                    //$interval(function(){ 
                    //    $scope.ujianselesai();
                    //}, 1000);    
                }
           });
        });

		}

}]);
ppdbApp.controller('home', ['$scope','$rootScope','$location','ppdbServ','$window','RestApi','$state','cfpLoadingBar','$timeout','AuthenticationService','$interval','Notification','$cookieStore', function ($scope, $rootScope, $location , ppdbServ, $window, RestApi,  $route , cfpLoadingBar, $timeout, AuthenticationService, $interval, Notification,$cookieStore){

	$scope.myip = myclientip;
	console.log($scope.myip);
	$rootScope.selectujian = $cookieStore.get('selectujian') || '';
	console.log($rootScope.selectujian);

	//alert($scope.nomorujian);
    $scope.ppdbServ = ppdbServ;        
    $scope.sekolah = sekolah;
	$scope.myTitle = sekolah;
    $scope.productform = {};

    $scope.showData = function() {
		RestApi.get('api/siswa/ujian/daftarujian/'+myclientip,function (data) {            	
			$timeout(function(){
               	$rootScope.dataujian = data;
               	$rootScope.listujianku = data;
                if($rootScope.dataujian.length == 1){
                    $scope.selectUjianKu($rootScope.dataujian[0].id_ujian);
                }
				reloadStatus = true;
				reloadServer = 300;
				Notification.success({message: '<center>Data diperbaharui</center>', delay: 5000});

            });
        });
	}	
    $scope.showData();
    $scope.shows = [];
	
	//findIP(addIP);
    $scope.cekipclient = function(ip) {
       // alert(x);
        //$scope.listsoall[x].soal.isi_soal
		myclientip = ip;
        RestApi.get('api/siswa/data/cekipclient/'+ip,function(response){
            $timeout(function(){
                if (response.success == true) {
				    setTimeout(function(){ $('html').removeClass("js"); }, 2000);
                }
                else {
					$("#kop").html('<div><b>Maaf, Komputer INI Tidak Terdaftar</b></div><br><img src="img/stop.png" alt="" width="80px"/><br><br><div id="message"><b><i>Silahkan hubungi admin UBK ...</i></b></div>');   
                }
           });
        });
           //cfpLoadingBar.complete();  
    };	
    $scope.cekipclient($scope.myip);


	$scope.tokenku = "";
    $scope.cektoken = function() {
		$.blockUI({ 
            message: '<h1>Tunggu...!</h1>'
		}); 
		if($rootScope.selectujian =='') $rootScope.selectujian = $scope.profile.idujian;
        RestApi.post('api/siswa/ujian/cektoken',{idujian:$scope.detailujian.idujian, kelas:$scope.profile.kelas,token:$scope.detailujian.tokenku},function(response){
            $timeout(function(){
                if (response.success == true) {
                    //alert(response.length)
                    //$scope.closeeditForm();
		     		clearInterval(timeinterval);
                    $scope.dataujian = response.data[0];
 					$cookieStore.put('dataujian', response.data[0]);
 					$.unblockUI(); 
                   $location.path('/mulai');
               }
                else {
					$.unblockUI(); 
					Notification.error({message: '<center>Kode TOKEN Tidak sesuai </center>', replaceMessage: true, delay: 5000});
                    //$interval(function(){ 
                    //    $scope.ujianselesai();
                    //}, 1000);    
                }
           });
        });
        //$scope.simpanjawaban();
    };

 

	
    $scope.gantiujianku = function() {
		$rootScope.selectujian = '';
		$cookieStore.remove('selectujian');
	}
    $scope.selectUjianKu = function(listuji) {
		$rootScope.detailujian = [];
		$rootScope.selectujian =listuji;
		$cookieStore.put('selectujian', listuji);
		console.log($rootScope.selectujian);
		$rootScope.getUjian();
	}
   
	
    //$scope.$route = $route;
	if($rootScope.selectujian !== ""){
		$rootScope.getUjian(); 
	}


	// Register service    
	//$scope.ngCart = ngCart;		gel1Serv
    
}]);
